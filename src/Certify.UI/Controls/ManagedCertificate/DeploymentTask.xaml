<UserControl
    x:Class="Certify.UI.Controls.ManagedCertificate.DeploymentTask"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:Certify.UI.Windows"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Certify.Models;assembly=Certify.Models"
    d:DesignHeight="480"
    mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />
        <DataTemplate x:Key="ProviderStringParameter">
            <StackPanel
                Margin="0,8,0,0"
                DockPanel.Dock="Left"
                Orientation="Horizontal">
                <Label Width="160" Content="{Binding Name}" />
                <TextBox
                    Width="250"
                    Controls:TextBoxHelper.Watermark="{Binding Description}"
                    KeyUp="ParameterInput_KeyUp"
                    Text="{Binding Value}" />
                <Button
                    x:Name="ShowParamLookup"
                    Padding="4"
                    Click="ShowParamLookup_Click">
                    <Button.Style>
                        <Style>
                            <Setter Property="UIElement.Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Key}" Value="zoneid">
                                    <Setter Property="UIElement.Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    ...
                </Button>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ProviderBooleanParameter">
            <StackPanel
                Margin="0,8,0,0"
                DockPanel.Dock="Left"
                Orientation="Horizontal">
                <Label Width="160" Content="{Binding Name}" />
                <CheckBox IsChecked="{Binding Value, Mode=TwoWay}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ProviderDropDownParameter">
            <StackPanel
                Margin="0,8,0,0"
                DockPanel.Dock="Left"
                Orientation="Horizontal">
                <Label Width="160" Content="{Binding Name}" />
                <ComboBox
                    Width="250"
                    DisplayMemberPath="Value"
                    ItemsSource="{Binding Options}"
                    SelectedValue="{Binding Value}"
                    SelectedValuePath="Key" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ProviderPasswordParameter">
            <StackPanel
                Margin="0,8,0,0"
                DockPanel.Dock="Left"
                Orientation="Horizontal">
                <Label Width="160" Content="{Binding Name}" />
                <PasswordBox
                    Width="250"
                    local:PasswordBoxAssistant.BindPassword="True"
                    local:PasswordBoxAssistant.BoundPassword="{Binding Value, Mode=TwoWay}" />
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>

    <DockPanel LastChildFill="False">

        <StackPanel DockPanel.Dock="Top">

            <StackPanel.Style>
                <Style>
                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItem.TaskTypeId}" Value="{x:Null}">
                            <Setter Property="UIElement.Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <TextBlock
                Margin="5,9,0,0"
                Style="{StaticResource Instructions}"
                Text="To begin, select a task type to configure." />



            <ScrollViewer Height="300" VerticalScrollBarVisibility="Auto">
                <ItemsControl
                    x:Name="TaskTypes"
                    Margin="16"
                    ItemsSource="{Binding DeploymentProviders}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>

                            <DockPanel Margin="8,8,8,8">
                                <Button
                                    Width="80"
                                    Height="32"
                                    Click="TaskTypeSelection_Click"
                                    CommandParameter="{Binding}"
                                    DockPanel.Dock="Left">
                                    <StackPanel Orientation="Horizontal">
                                        <fa:ImageAwesome
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="{DynamicResource MahApps.Brushes.Accent}"
                                            Icon="PlayCircleOutline" />
                                        <TextBlock Margin="8,0,0,0" VerticalAlignment="Center">Select</TextBlock>
                                    </StackPanel>
                                </Button>
                                <StackPanel Margin="16,0,0,0" DockPanel.Dock="Left">
                                    <TextBlock FontWeight="SemiBold" Text="{Binding Title}" />


                                    <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
                                        <TextBlock
                                            DockPanel.Dock="Left"
                                            Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
                                            Text="{Binding Description}" />

                                        <StackPanel
                                            HorizontalAlignment="Right"
                                            Orientation="Horizontal"
                                            Visibility="{Binding IsExperimental, Converter={StaticResource ResourceKey=BoolToVisConverter}}">
                                            <fa:ImageAwesome
                                                Height="16"
                                                Margin="8,-8"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Foreground="{DynamicResource ValidationSummaryColor5}"
                                                Icon="Flask"
                                                ToolTip="Experimental" />

                                        </StackPanel>
                                    </StackPanel>

                                </StackPanel>
                            </DockPanel>

                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>


        </StackPanel>

        <StackPanel>
            <StackPanel.Style>
                <Style>
                    <Setter Property="UIElement.Visibility" Value="Visible" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedItem.TaskTypeId}" Value="{x:Null}">
                            <Setter Property="UIElement.Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>


            <TabControl
                x:Name="MainTabControl"
                Height="auto"
                Margin="8,8,8,8"
                HorizontalContentAlignment="Left"
                VerticalContentAlignment="Stretch"
                Controls:TabControlHelper.Underlined="SelectedTabItem"
                DockPanel.Dock="Top">

                <TabItem
                    MinWidth="100"
                    Controls:HeaderedControlHelper.HeaderFontSize="12"
                    Header="General Settings"
                    IsSelected="True">

                    <DockPanel
                        Margin="8"
                        DockPanel.Dock="Top"
                        LastChildFill="False">

                        <DockPanel.Style>
                            <Style>
                                <Setter Property="UIElement.Visibility" Value="Visible" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedItem.TaskTypeId}" Value="{x:Null}">
                                        <Setter Property="UIElement.Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DockPanel.Style>


                        <!--  Task Type Selection  -->
                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal">
                            <Label Width="100" Content="Task Type" />

                            <ComboBox
                                x:Name="TaskProviderList"
                                Width="225"
                                Margin="0,0,8,0"
                                DisplayMemberPath="Title"
                                ItemsSource="{Binding DeploymentProviders}"
                                SelectedValue="{Binding SelectedItem.TaskTypeId, UpdateSourceTrigger=PropertyChanged}"
                                SelectedValuePath="Id"
                                SelectionChanged="TaskProviderList_SelectionChanged" />

                        </StackPanel>

                        <!--  Task Type Info  -->
                        <TextBlock
                            x:Name="ProviderDescription"
                            Margin="8,8,8,0"
                            DockPanel.Dock="Top"
                            Style="{StaticResource Instructions}"
                            Text="{Binding DeploymentProvider.Description}"
                            TextWrapping="WrapWithOverflow" />

                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal">
                            <Label Width="100" Content="Task Name" />

                            <TextBox
                                x:Name="TaskName"
                                Width="225"
                                Margin="0,0,8,0"
                                Controls:TextBoxHelper.Watermark="A unique name for this task"
                                KeyUp="TaskName_KeyUp"
                                Text="{Binding SelectedItem.TaskName, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>

                        <!--  Task Description  -->

                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal">
                            <Label Width="100" Content="Description" />

                            <TextBox
                                x:Name="TaskDescription"
                                Width="225"
                                Height="48"
                                Margin="0,0,8,0"
                                Controls:TextBoxHelper.Watermark="Optionally describe this task."
                                AcceptsReturn="True"
                                Text="{Binding SelectedItem.Description, UpdateSourceTrigger=PropertyChanged}"
                                TextWrapping="Wrap"
                                VerticalScrollBarVisibility="Auto" />
                        </StackPanel>

                        <!--  Task Trigger  -->
                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal">
                            <Label Width="100" Content="Trigger" />
                            <ComboBox
                                x:Name="TaskTrigger"
                                Width="225"
                                Margin="0,0,8,0"
                                DisplayMemberPath="Value"
                                ItemsSource="{Binding TriggerTypes}"
                                SelectedValue="{Binding SelectedItem.TaskTrigger}"
                                SelectedValuePath="Key" />

                        </StackPanel>
                        <StackPanel Margin="100,8,0,0" DockPanel.Dock="Top">
                            <CheckBox Content="Run task even if previous task step failed" IsChecked="{Binding SelectedItem.RunIfLastStepFailed}" />
                        </StackPanel>

                        <!--  Deferred/Manual Task  -->

                        <StackPanel
                            x:Name="DeferredInstructionsContainer"
                            Margin="0,8"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            MouseUp="DeferredInstructions1_MouseUp"
                            Orientation="Vertical"
                            ToolTip="Click to copy to clipboard">
                            <StackPanel.Style>
                                <Style>
                                    <Setter Property="UIElement.Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedItem.TaskTrigger}" Value="8">
                                            <Setter Property="UIElement.Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>

                            <TextBlock Style="{StaticResource Instructions}" TextWrapping="WrapWithOverflow">
                                Manually triggered tasks only run when you tell them to using the Deployment UI or via the command line (e.g. in a custom scheduled task). This is useful for tasks which should only happen during a maintenance window.
                            </TextBlock>

                            <StackPanel Orientation="Horizontal">


                                <TextBox
                                    x:Name="DeferredInstructions"
                                    Width="380"
                                    Margin="0,0,0,0"
                                    HorizontalAlignment="Left"
                                    IsReadOnly="True"
                                    Text="{Binding CLICommand, Mode=OneWay}"
                                    TextWrapping="Wrap" />
                                <fa:FontAwesome
                                    Width="16"
                                    Height="16"
                                    Margin="16,0,0,0"
                                    HorizontalAlignment="Left"
                                    Icon="Copy" />

                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </TabItem>
                <TabItem
                    Width="auto"
                    Controls:HeaderedControlHelper.HeaderFontSize="12"
                    Header="Task Parameters">

                    <DockPanel Margin="8,0,0,0" LastChildFill="False">

                        <!--  target type  -->
                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal">
                            <Label Width="160" Content="Authentication" />

                            <ComboBox
                                x:Name="TargetType"
                                Width="225"
                                Margin="0,0,8,0"
                                DisplayMemberPath="Value"
                                ItemsSource="{Binding TargetTypes}"
                                SelectedValue="{Binding SelectedItem.ChallengeProvider}"
                                SelectedValuePath="Key"
                                SelectionChanged="TargetType_SelectionChanged" />
                        </StackPanel>


                        <!--  remote host  -->
                        <StackPanel
                            Margin="0,8,0,0"
                            DockPanel.Dock="Top"
                            Orientation="Horizontal"
                            Visibility="{Binding UsesRemoteOptions, Converter={StaticResource ResourceKey=BoolToVisConverter}}">

                            <Label Width="160" Content="Target Host or IP" />

                            <TextBox
                                x:Name="TargetHost"
                                Width="225"
                                Margin="0,0,8,0"
                                Controls:TextBoxHelper.Watermark="IP or hostname to connect to"
                                Text="{Binding SelectedItem.TargetHost, UpdateSourceTrigger=PropertyChanged}" />
                        </StackPanel>


                        <StackPanel
                            x:Name="ProviderCredentials"
                            DockPanel.Dock="Top"
                            Orientation="Vertical"
                            Visibility="{Binding UsesCredentials, Converter={StaticResource ResourceKey=BoolToVisConverter}}">

                            <StackPanel Margin="0,8,0,0" Orientation="Horizontal">
                                <Label Width="160" Content="Credentials" />

                                <ComboBox
                                    x:Name="StoredCredentials"
                                    Width="225"
                                    Margin="0,0,8,0"
                                    DisplayMemberPath="Title"
                                    ItemsSource="{Binding FilteredCredentials}"
                                    SelectedItem="{Binding SelectedCredentialItem, Mode=TwoWay}" />
                                <Button Click="AddStoredCredential_Click" Content="New" />
                            </StackPanel>
                        </StackPanel>
                        <ItemsControl
                            x:Name="DeploymentTaskParams"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderColor}}"
                            DockPanel.Dock="Top"
                            ItemsSource="{Binding DeploymentProvider.ProviderParameters}">
                            <ItemsControl.ItemTemplateSelector>
                                <local:ControlTemplateSelector />
                            </ItemsControl.ItemTemplateSelector>
                        </ItemsControl>
                    </DockPanel>
                </TabItem>


            </TabControl>
        </StackPanel>
    </DockPanel>

</UserControl>
